<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="robots" content="index, follow">
    <title>JavaScript Design Patterns and OOPS Concepts</title>

    <meta name="description" content="Learn JavaScript Design Patterns and Object Oriented Concepts like Module Pattern, Prototype, Singleton Pattern, IIFE, Object Creation, Hoisting." />

    <meta name="title" content="Learn JavaScript Design Patterns like Module, Prototype, Singleton, Object Creation, Hoisting, IIFE" />

    <meta name="keywords" content="object oriented javascript,javascript design patterns,learn javascript,prototype pattern,closures,singleton pattern,iife,module pattern"/>

    <link rel="stylesheet" href="css/shrink.css">
    <link rel="stylesheet" href="css/font-awesome.css">

    <meta name="msvalidate.01" content="F77C0434F58CEA255020E3CCDE1B58D6" />

    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.min.css">


  </head>
  <body id="index-page">

    <!-- Search -->
    <div class="search-overlay"></div>
    <div class="search">
      <a href="" class="search-close"><i class="md md-close"></i></a>
      <div class="row">
        <div class="col-sm-6 col-sm-offset-3">
          <h4>Just Start Typing Text and Press Enter</h4>
          <form class="search-form">
            <input type="text" id="search" name="search" class="text-center" />
          </form> <!-- end .search-form -->
        </div> <!-- end .col-sm-6 -->
      </div> <!-- end .row -->
    </div> <!-- end .row -->
    <!-- Slide Out -->


    <!-- Header -->
    <header class="header">
      <div class="top clearfix">
        <a href="#section8" class="available"><i class="ion-ios-email-outline"></i><span>Available For Freelance</span></a>
        <div class="right-icons">
          <a href="" class="open-search header-open-search"><i class="md md-search"></i></a>
          <a href="" class="download"><i class="md md-file-download"></i></a>
          <a href="" class="share"><i class="md md-more-vert"></i></a>
        </div> <!-- end .right-icons -->

      </div> <!-- end .top -->
      <div class="bottom clearfix">
        <div class="title"></div>

        <a href="" class="responsive-menu-open">Menu <i class="fa fa-bars"></i></a>
        <div style="inline-block; float: left; width:50%; margin-left: 30px;" class="search-input">
          <script>
            (function() {
              var cx = '001992214099567997391:jyqubfp75yo';
              var gcse = document.createElement('script');
              gcse.type = 'text/javascript';
              gcse.async = true;
              gcse.src = 'https://cse.google.com/cse.js?cx=' + cx;
              var s = document.getElementsByTagName('script')[0];
              s.parentNode.insertBefore(gcse, s);
            })();
          </script>
          <gcse:searchbox-only></gcse:searchbox-only>
        </div>
        <nav style="inline-block" class="main-nav">
          <ul class="list-unstyled">
            <li class="active"><a href="/">Home</a></li>
            <li><a href="/about">About</a></li>
          </ul>
        </nav> <!-- end .main-nav -->
      </div> <!-- end .bottom -->
    </header> <!-- end .header -->
    <div class="responsive-menu">
      <a href="" class="responsive-menu-close">Close <i class="ion-android-close"></i></a>
      <nav class="responsive-nav"></nav> <!-- end .responsive-nav -->
    </div> <!-- end .responsive-menu -->

    <!-- Section Navigation -->
    <div class="section-nav">
      <nav class="section1">
      </nav>
    </div> <!-- end .section-nav -->

    <!-- Sections -->
    <div class="sections" style="margin-bottom:200px;">
      <div class="sections-wrapper clearfix">


        <section>
          <div class="container">
            <b style="font-size: 25px;">Learn Object Oriented JavaScript and Design Patterns</b>
            <div class="blog-posts masonry" id="blog-masonry">
              <div class="blog-grid-sizer"></div>


              <div class="blog-post image-left">
                <div class="inner">
                  <a href="/node-aynch-execution-single-threaded-event-loop-callback-non-blocking-architecture">
                      <div class="image" style="background-image: url('images/JavaScript-logo.png');" alt="Node.js Single Threaded Event Loop Based Architecture"></div>
                  </a>
                  <div class="content" style="display: flex; flex-direction: column;">
                    <h1><a href="/node-aynch-execution-single-threaded-event-loop-callback-non-blocking-architecture">Node.js Architecture</a></h1>
                    <p class="details">
                      <b>Node.js is Single Threaded Event Loop Architecture</b>. This Article shall enable you to understand the basic Architecture of Node.js, it also focusses on <b>"How Node.js is Different from other Languages"</b><br>
                      <button class="preview" style="display: none" onclick="openPreview('iifeDialog')">Preview</button>
                    </p>
                  </div> <!-- end .content -->
                </div> <!-- end .inner -->
              </div> <!-- end .blog-post -->



              <div class="blog-post">
                <div class="inner">
                  <div class="content">
                    <h1><a href="/javascript-module-pattern-design-singleton">Module Pattern in JavaScript</a></h1>
                    <p class="details"><b>Module Pattern</b> is an efficient <b>Design Pattern</b> in case user need to return a simple Object from a function. Module Pattern acts like a singleton returning single reusable Object.
                    </p>
                  </div> <!-- end .content -->
                </div> <!-- end .inner -->
              </div> <!-- end .blog-post -->
              <div class="blog-post image-top">
                <div class="inner">
                  <a href="/javascript-scopes-function-scope-global-scope"><div class="image" style="background-image: url('images/node.jpg');"></div></a>
                  <div class="content">
                    <h1><a href="/javascript-scopes-function-scope-global-scope">Scopes in JavaScript</a></h1>
                    <p class="details"><b>Scopes</b> in Javascript determine the accessibility of a declared variable. Variables cannot be accessed outside the scope in which it is defined. We can have "block", "function" and "global" scopes.</p>
                  </div> <!-- end .content -->
                </div> <!-- end .inner -->
              </div> <!-- end .blog-post -->
              <div class="blog-post image-top">
                <div class="inner">
                  <a href="/"><div class="image" style="background-image: url('images/javascript.jpg');"></div></a>
                  <div class="content">
                    <h1><a href="/create-javascript-object-string-literal-new-keyword-new-object">JavaScript Object Creation</a></h1>
                    <p class="details">
                      <b>Objects can be created</b> in different ways. In the following article we shall be learning about the different ways in which they can be created and associated advantages and disadvantages.
                    </p>
                  </div> <!-- end .content -->
                </div> <!-- end .inner -->
              </div> <!-- end .blog-post -->
              <div class="blog-post image-right">
                <div class="inner">
                  <a><div class="image" style="background-image: url('images/objects.jpg');"></div></a>
                  <div class="content">
                    <h1><a href="/singleton-design-pattern-javascript-module">Singleton in JavaScript</a></h1>
                    <p class="details">
                      <b>Singleton Design Pattern</b> ensures that we cannot have multiple instances of a particular Object. Singleton Design Pattern are set of functions and variables exposed from a function.
                    </p>
                  </div> <!-- end .content -->
                </div> <!-- end .inner -->
              </div> <!-- end .blog-post -->
              <div class="blog-post">
                <div class="inner">
                  <div class="content">
                    <h1><a href="/function-and-variable-hoisting-javascript-closures">Hoisting in JavaScript</a></h1>
                    <p class="details">
                      <b>Hoisting</b> is one of the most important features of JavaScript. Function Definition and Variable Declarations are by default moved to the top of function Definition. Hence making it accessible even before it is declared.
                    </p>
                  </div> <!-- end .content -->
                </div> <!-- end .inner -->
              </div> <!-- end .blog-post -->
              <div class="blog-post image-left">
                <div class="inner">
                  <a href="/prototype-pattern-javascript-function-prototype"><div class="image" style="background-image: url('images/es6.jpg');"></div></a>
                  <div class="content" style="display: flex; flex-direction: column;">
                    <h1><a href="/prototype-pattern-javascript-function-prototype">JavaScript Prototype Pattern</a></h1>
                    <p class="details">
                      <b>Prototype Pattern</b> is used at the places where we need to create multiple Objects of a specicif type. It is a <b>constructor function</b> using which multiple instances of the same type can be created.
                    </p>

                  </div> <!-- end .content -->
                </div> <!-- end .inner -->
              </div> <!-- end .blog-post -->
              <div class="blog-post">
                <div class="inner">
                  <div class="content">
                    <h1><a href="/delete-keyword-javascript-properties-object">Delete Keyword JavaScript</a></h1>
                    <p class="details">
                      <b>Delete Keyword</b> in used in JavaScript in order to delete properties and Objects. However <b>delete</b> cannot be used in case where we have non-configurable properties.
                    </p>
                  </div> <!-- end .content -->
                </div> <!-- end .inner -->
              </div> <!-- end .blog-post -->


              <div class="blog-post image-left">
                <div class="inner">
                  <a href="/javascript-function-chaining-jquery-chaining">
                      <div class="image" style="background-image: url('images/JavaScript-logo.png');" alt="IIFE Immediately Invokable Function Expression JavaScript"></div>
                  </a>
                  <div class="content" style="display: flex; flex-direction: column">
                    <h1><a href="/javascript-function-chaining-jquery-chaining">Function Chaining in JavaScript</a></h1>
                    <p class="details">
                      <b>Function Chaining</b> is the concept which is followed by Framework Like JQuery. Function can be chained together and called in a single line. We can utilize function chaining concept to build efficient code.
                    </p>
                  </div> <!-- end .content -->
                </div> <!-- end .inner -->
              </div> <!-- end .blog-post -->


              <div class="blog-post">
                <div class="inner">
                  <div class="content">
                    <h1><a href="/function-and-variable-hoisting-javascript-closures">Context vs Scope in JavaScript</a></h1>
                    <p class="details">
                      <b>Scope and Context</b> are often confused as the same thing in JavaScript. This document shall help you understand the difference between the Context and the Scopes in JavaScript. This is important to understand the difference between the two.
                    </p>
                  </div> <!-- end .content -->
                </div> <!-- end .inner -->
              </div> <!-- end .blog-post -->

              <div class="blog-post image-left">
                <div class="inner">
                  <a href="/iife-immediately-invoked-function-expressions-javascript-singleton-design-pattern-closures">
                      <div class="image" style="background-image: url('images/JavaScript-logo.png');" alt="IIFE Immediately Invokable Function Expression JavaScript"></div>
                  </a>
                  <div class="content" style="display: flex; flex-direction: column;">
                    <h1><a href="/iife-immediately-invoked-function-expressions-javascript-singleton-design-pattern-closures">Immediately Invokable Function Expression</a></h1>
                    <p class="details">
                      <b>IIFE (Immediately Invokable Function Expressions)</b> are self invoking function expressions. This <b>Design Pattern</b> should be used in case function is required to be called just once.<br>
                      <button class="preview" onclick="openPreview('iifeDialog')" style="display: none">Preview</button>
                    </p>
                  </div> <!-- end .content -->
                </div> <!-- end .inner -->
              </div> <!-- end .blog-post -->
			  
			  <div class="blog-post">
                <div class="inner">
                  <div class="content">
                    <h1><a href="https://www.codeproject.com/Articles/483055/XML-Serialization-and-Deserialization-Part">C# Serialization Basics</a></h1>
                    <p class="details">
                      <b>Serialization</b> is a process by which an object's state is transformed in some serial data format, such as XML or binary format. Deserialization on the other hand is used to convert the byte of data, such as XML or binary data, to object type.
                    </p>
                  </div> <!-- end .content -->
                </div> <!-- end .inner -->
              </div> <!-- end .blog-post -->
			  
			  <div class="blog-post">
                <div class="inner">
                  <div class="content">
                    <h1><a href="https://www.codeproject.com/Articles/487571/XML-Serialization-and-Deserialization-Part">C# Deserialization Basics</a></h1>
                    <p class="details">
                      <b>Deserialization</b> is used to convert bytes of data, such as XML or binary data, to "Object" type. An XML file can be reconverted back to an Object using deserialization. 
                    </p>
                  </div> <!-- end .content -->
                </div> <!-- end .inner -->
              </div> <!-- end .blog-post -->

            </div> <!-- end .blog-posts -->

          </div> <!-- end .container -->
        </section> <!-- end #section1 -->


      </div> <!-- end .sections-wrapper -->
    </div> <!-- end .sections -->

    <div id="iifeDialog" title="Basic dialog">
      <p></p>
    </div>


    <footer class="footer">
      <div class="top">
        <div class="container">
          <div class="row">
            <div class="col-sm-4">
              <h4>Address</h4>
              <p>A-8, Milansar Appartment, Rohini<br />Delhi, India</p>
            </div> <!-- end .col-sm-4 -->
            <div class="col-sm-4">
              <h4>Connect</h4>
              <div class="social-icons">
                <a href="" class="social-icon"><i class="fa fa-facebook"></i></a>
                <a href="" class="social-icon"><i class="fa fa-twitter"></i></a>
                <a href="" class="social-icon"><i class="fa fa-google-plus"></i></a>
                <a href="" class="social-icon"><i class="fa fa-behance"></i></a>
                <a href="" class="social-icon"><i class="fa fa-dribbble"></i></a>
              </div> <!-- end .social-icons -->
            </div> <!-- end .col-sm-4 -->
            <div class="col-sm-4">
              <h4>Contact</h4>
              <p>Tel: +91 9711083089<br />Mail: mayankgupta688@gmail.com</p>
            </div> <!-- end .col-sm-4 -->
          </div> <!-- end .row -->
        </div> <!-- end .container -->
      </div> <!-- end .footer -->
      <div class="bottom">Copyright &copy; Sility. All Rights Reserved.</div> <!-- end .bottom -->
    </footer> <!-- end .footer -->

    <script defer src="js/jquery-1.11.2.min.js"></script>
    <script defer src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
    <script defer src="js/bootstrap.min.js"></script>
    <script defer src="js/isotope.pkgd.min.js"></script>
    <script defer src="js/imagesloaded.pkgd.min.js"></script>
    <script defer src="js/scriptRefined.js"></script>
    <script defer src="js/analytics.js"></script>
    <script>
      function openPreview(dialogName) {
        $("#" + dialogName).dialog({
          maxWidth: '600px',
          width: 'auto'
        });
      }
    </script>

  </body>
</html>


